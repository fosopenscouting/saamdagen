import React, { useEffect, useRef } from 'react';
import { StyleSheet } from 'react-native';
import Animated, {	
  useAnimatedStyle,
  useSharedValue,
  withRepeat,
  withSequence,
  withTiming,
  Easing,
} from 'react-native-reanimated';
import Svg, { Path, SvgProps } from 'react-native-svg';

const AnimatedSvg = React.forwardRef(
  (props: SvgProps, ref: React.LegacyRef<Svg>) => {
    return (
      <Svg
        width={278}
        height={278}
        viewBox="0 0 278 278"
        fill="none"
        {...props}
      >
        <Path
          d="M227.357 269.38C226.213 269.38 225.117 269.834 224.309 270.642C223.501 271.451 223.047 272.547 223.047 273.69C223.047 274.833 223.501 275.929 224.309 276.738C225.117 277.546 226.213 278 227.357 278V269.38ZM278 227.357C278 226.213 277.546 225.117 276.738 224.309C275.929 223.501 274.833 223.047 273.69 223.047C272.547 223.047 271.451 223.501 270.642 224.309C269.834 225.117 269.38 226.213 269.38 227.357H278ZM227.357 278C234.705 278 242.603 277.794 249.764 276.389C256.906 274.988 263.844 272.296 268.785 266.905L262.432 261.08C259.26 264.539 254.397 266.696 248.104 267.931C241.831 269.162 234.659 269.38 227.357 269.38V278ZM268.785 266.905C273.32 261.959 275.528 255.094 276.675 248.278C277.834 241.387 278 233.939 278 227.357H269.38C269.38 233.882 269.205 240.716 268.174 246.848C267.13 253.053 265.298 257.953 262.432 261.08L268.785 266.905ZM269.38 50.6434C269.38 51.7865 269.834 52.8828 270.642 53.6911C271.451 54.4994 272.547 54.9535 273.69 54.9535C274.833 54.9535 275.929 54.4994 276.738 53.6911C277.546 52.8828 278 51.7865 278 50.6434H269.38ZM227.357 0C226.213 0 225.117 0.454096 224.309 1.26239C223.501 2.07069 223.047 3.16697 223.047 4.31008C223.047 5.45318 223.501 6.54947 224.309 7.35776C225.117 8.16606 226.213 8.62016 227.357 8.62016V0ZM278 50.6434C278 43.2947 277.794 35.3965 276.389 28.2364C274.988 21.0935 272.296 14.1565 266.905 9.21495L261.08 15.568C264.539 18.7402 266.696 23.6031 267.931 29.8958C269.162 36.1702 269.38 43.3411 269.38 50.6434H278ZM266.905 9.21495C261.959 4.67967 255.094 2.47183 248.278 1.32535C241.387 0.165938 233.939 0 227.357 0V8.62016C233.882 8.62016 240.716 8.79471 246.848 9.8259C253.053 10.87 257.953 12.7029 261.08 15.5691L266.905 9.21495ZM8.62016 227.357C8.62016 226.213 8.16606 225.117 7.35776 224.309C6.54947 223.501 5.45318 223.047 4.31008 223.047C3.16697 223.047 2.07069 223.501 1.26239 224.309C0.454096 225.117 0 226.213 0 227.357H8.62016ZM50.6434 278C51.7865 278 52.8828 277.546 53.6911 276.738C54.4994 275.929 54.9535 274.833 54.9535 273.69C54.9535 272.547 54.4994 271.451 53.6911 270.642C52.8828 269.834 51.7865 269.38 50.6434 269.38V278ZM0 227.357C0 234.705 0.204729 242.603 1.61089 249.764C3.01167 256.906 5.70439 263.844 11.0952 268.785L16.9203 262.432C13.4615 259.26 11.3043 254.397 10.0694 248.104C8.83781 241.831 8.62016 234.659 8.62016 227.357H0ZM11.0952 268.785C16.041 273.32 22.9059 275.528 29.7223 276.675C36.6141 277.834 44.0619 278 50.6434 278V269.38C44.118 269.38 37.2843 269.205 31.1532 268.174C24.9467 267.13 20.0472 265.298 16.9203 262.432L11.0952 268.785ZM50.6434 8.62016C51.7865 8.62016 52.8828 8.16606 53.6911 7.35776C54.4994 6.54947 54.9535 5.45318 54.9535 4.31008C54.9535 3.16697 54.4994 2.07069 53.6911 1.26239C52.8828 0.454096 51.7865 0 50.6434 0V8.62016ZM0 50.6434C0 51.7865 0.454096 52.8828 1.26239 53.6911C2.07069 54.4994 3.16697 54.9535 4.31008 54.9535C5.45318 54.9535 6.54947 54.4994 7.35776 53.6911C8.16606 52.8828 8.62016 51.7865 8.62016 50.6434H0ZM50.6434 0C43.2947 0 35.3965 0.204729 28.2364 1.61089C21.0935 3.01167 14.1565 5.70439 9.21495 11.0952L15.568 16.9203C18.7402 13.4615 23.6031 11.3043 29.8958 10.0694C36.1702 8.83781 43.3411 8.62016 50.6434 8.62016V0ZM9.21495 11.0952C4.67967 16.041 2.47183 22.9059 1.32535 29.7223C0.165938 36.6141 0 44.0619 0 50.6434H8.62016C8.62016 44.118 8.79471 37.2843 9.8259 31.1532C10.87 24.9467 12.7029 20.0472 15.5691 16.9203L9.21495 11.0952Z"
          fill="#fff"
        />
      </Svg>
    );
  },
);

const AnimatedScanner = Animated.createAnimatedComponent(AnimatedSvg);

/**
 * A pulsing 'crosshair' that is overlayed on the camera screen. Taken from the Expo Go app source code
 */
const QrIndicator: React.FC = () => {
  const duration = 1000;
  const ref = useRef<Svg | null>(null);

  const scale = useSharedValue(1);
  const animatedStyles = useAnimatedStyle(() => ({
    transform: [
      {
        scale: scale.value,
      },
    ],
  }));

  useEffect(() => {
    scale.value = withRepeat(
      withSequence(
        withTiming(1, {
          duration,
          easing: Easing.ease,
        }),
        withTiming(1.05, {
          duration,
          easing: Easing.ease,
        }),
      ),
      -1,
      true,
    );
  }, []);

  return <AnimatedScanner style={[styles.scanner, animatedStyles]} />;
};

const styles = StyleSheet.create({
  scanner: {
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 1,
    },
    shadowOpacity: 0.22,
    shadowRadius: 2.22,
  },
});
export default QrIndicator;
